volumes:
  boba-postgres-data:
      external: true
  pg-admin:
    external: true

services:
  postgres-db:
      build:
          context: ./relational-data
          dockerfile: ./Dockerfile.dev
      volumes:
          - boba-postgres-data:/var/lib/postgresql/data
      environment:
          - POSTGRES_MULTIPLE_DATABASES=users,stores_favorites_drinks
          - POSTGRES_PASSWORD=test-databases
      ports:
          - 15432:5432

  users:
    build:
      context: ./users
      dockerfile: ./Dockerfile.dev
    ports:
      - 8080:8000
    volumes:
      - ./users:/app
    environment: 
      DATABASE_URL: postgresql://users:password@postgres-db/users
      WAIT_HOSTS: postgres-db:5432 
      SIGNING_KEY: ${SIGNING_KEY}

  stores_favorites_drinks:
    build:
      context: ./stores_favorites_drinks
      dockerfile: ./Dockerfile.dev
    ports:
      - 8090:8000
    volumes:
      - ./stores_favorites_drinks:/app
    environment: 
      DATABASE_URL: postgresql://stores_favorites_drinks:password@postgres-db/stores_favorites_drinks
      WAIT_HOSTS: postgres-db:5432 
      SIGNING_KEY: ${SIGNING_KEY}
 
  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_USERS_API_HOST: http://localhost:8080
      REACT_APP_STORES_FAVORITES_DRINKS_API_HOST: http://localhost:8090

  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: username@email.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1
